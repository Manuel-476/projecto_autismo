// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projecto_autismo.InfraStructure.DataBase;

#nullable disable

namespace projecto_autismo.Migrations
{
    [DbContext(typeof(DbConnection))]
    [Migration("20240707124956_migracao")]
    partial class migracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AlunoEntityEncarregadoEntity", b =>
                {
                    b.Property<int>("alunosid")
                        .HasColumnType("int");

                    b.Property<int>("encarregadosid")
                        .HasColumnType("int");

                    b.HasKey("alunosid", "encarregadosid");

                    b.HasIndex("encarregadosid");

                    b.ToTable("AlunoEntityEncarregadoEntity");
                });

            modelBuilder.Entity("DisciplinaEntityTurmaEntity", b =>
                {
                    b.Property<int>("disciplinasid")
                        .HasColumnType("int");

                    b.Property<int>("turmasid")
                        .HasColumnType("int");

                    b.HasKey("disciplinasid", "turmasid");

                    b.HasIndex("turmasid");

                    b.ToTable("DisciplinaEntityTurmaEntity");
                });

            modelBuilder.Entity("projecto_autismo.Domain.AlunoEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("data_nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("deficiencia")
                        .HasColumnType("int");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipo_deficiencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("aluno");
                });

            modelBuilder.Entity("projecto_autismo.Domain.BibliotecaVirtualEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("CategoriaEntityid")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioEntityid")
                        .HasColumnType("int");

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("funcionarioId")
                        .HasColumnType("int");

                    b.Property<string>("media")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("CategoriaEntityid");

                    b.HasIndex("FuncionarioEntityid");

                    b.ToTable("bVirtual");
                });

            modelBuilder.Entity("projecto_autismo.Domain.CategoriaEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("projecto_autismo.Domain.DisciplinaEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("disciplina");
                });

            modelBuilder.Entity("projecto_autismo.Domain.EncarregadoEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("encarregado");
                });

            modelBuilder.Entity("projecto_autismo.Domain.FuncionarioEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("DisciplinaEntityid")
                        .HasColumnType("int");

                    b.Property<DateTime>("data_nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("funcao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("num_identificacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("DisciplinaEntityid");

                    b.ToTable("funcionario");
                });

            modelBuilder.Entity("projecto_autismo.Domain.MatriculaEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("alunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("alunoId")
                        .IsUnique();

                    b.ToTable("matricula");
                });

            modelBuilder.Entity("projecto_autismo.Domain.NotaEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("disciplinaId")
                        .HasColumnType("int");

                    b.Property<float>("nota1")
                        .HasColumnType("float");

                    b.Property<float>("nota2")
                        .HasColumnType("float");

                    b.Property<float>("nota3")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("disciplinaId");

                    b.ToTable("nota");
                });

            modelBuilder.Entity("projecto_autismo.Domain.TesteEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ano")
                        .HasColumnType("int");

                    b.Property<int>("parcela")
                        .HasColumnType("int");

                    b.Property<string>("semestre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("teste");
                });

            modelBuilder.Entity("projecto_autismo.Domain.TurmaEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("turno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("turma");
                });

            modelBuilder.Entity("projecto_autismo.Domain.VitrineEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("funcionarioId")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("funcionarioId");

                    b.ToTable("vitrine");
                });

            modelBuilder.Entity("AlunoEntityEncarregadoEntity", b =>
                {
                    b.HasOne("projecto_autismo.Domain.AlunoEntity", null)
                        .WithMany()
                        .HasForeignKey("alunosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projecto_autismo.Domain.EncarregadoEntity", null)
                        .WithMany()
                        .HasForeignKey("encarregadosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DisciplinaEntityTurmaEntity", b =>
                {
                    b.HasOne("projecto_autismo.Domain.DisciplinaEntity", null)
                        .WithMany()
                        .HasForeignKey("disciplinasid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projecto_autismo.Domain.TurmaEntity", null)
                        .WithMany()
                        .HasForeignKey("turmasid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projecto_autismo.Domain.BibliotecaVirtualEntity", b =>
                {
                    b.HasOne("projecto_autismo.Domain.CategoriaEntity", null)
                        .WithMany("virtuais")
                        .HasForeignKey("CategoriaEntityid");

                    b.HasOne("projecto_autismo.Domain.FuncionarioEntity", null)
                        .WithMany("virtuais")
                        .HasForeignKey("FuncionarioEntityid");
                });

            modelBuilder.Entity("projecto_autismo.Domain.FuncionarioEntity", b =>
                {
                    b.HasOne("projecto_autismo.Domain.DisciplinaEntity", null)
                        .WithMany("funcionarios")
                        .HasForeignKey("DisciplinaEntityid");
                });

            modelBuilder.Entity("projecto_autismo.Domain.MatriculaEntity", b =>
                {
                    b.HasOne("projecto_autismo.Domain.AlunoEntity", "aluno")
                        .WithOne("matricula")
                        .HasForeignKey("projecto_autismo.Domain.MatriculaEntity", "alunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aluno");
                });

            modelBuilder.Entity("projecto_autismo.Domain.NotaEntity", b =>
                {
                    b.HasOne("projecto_autismo.Domain.DisciplinaEntity", "disciplina")
                        .WithMany("notas")
                        .HasForeignKey("disciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disciplina");
                });

            modelBuilder.Entity("projecto_autismo.Domain.VitrineEntity", b =>
                {
                    b.HasOne("projecto_autismo.Domain.FuncionarioEntity", "funcionario")
                        .WithMany("vitrines")
                        .HasForeignKey("funcionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionario");
                });

            modelBuilder.Entity("projecto_autismo.Domain.AlunoEntity", b =>
                {
                    b.Navigation("matricula");
                });

            modelBuilder.Entity("projecto_autismo.Domain.CategoriaEntity", b =>
                {
                    b.Navigation("virtuais");
                });

            modelBuilder.Entity("projecto_autismo.Domain.DisciplinaEntity", b =>
                {
                    b.Navigation("funcionarios");

                    b.Navigation("notas");
                });

            modelBuilder.Entity("projecto_autismo.Domain.FuncionarioEntity", b =>
                {
                    b.Navigation("virtuais");

                    b.Navigation("vitrines");
                });
#pragma warning restore 612, 618
        }
    }
}
